class Solution {
    int dp[][];
    public int lcs(int m,int n,String text1,String text2)
    {
        if(n==0||m==0)
            return 0;
        if(dp[m][n]!=-1)
            return dp[m][n];
        if(text1.charAt(m-1)==text2.charAt(n-1))
        {
            dp[m][n]=1+lcs(m-1,n-1,text1,text2);
            return dp[m][n];
        }
        int a=lcs(m-1,n,text1,text2);
        int b=lcs(m,n-1,text1,text2);
        dp[m][n]=Math.max(a,b);
        return dp[m][n];
    }
    public int minInsertions(String s) {
        String str="";
        //int a=0;
        for(int i=s.length()-1;i>=0;i--)
        {
            str+=s.charAt(i);
            
        }
        dp=new int[s.length()+1][s.length()+1];
        for(int i=0;i<=s.length();i++)
        {
            for(int j=0;j<=s.length();j++)
            {
                dp[i][j]=-1;
            }
        }
        int p=lcs(s.length(),s.length(),s,str); 
        return s.length()-p;
    }
}
